{"version":3,"sources":["../../src/pages/info/info.ts","../../src/pages/info/info.module.ts","../../node_modules/copy-to-clipboard/index.js","../../node_modules/toggle-selection/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA0C;AAC2D;AAC3D;AAM1C,IAAa,QAAQ;IAKnB,kBAAmB,OAAsB,EAAS,SAAoB,EAAS,QAAwB,EAAS,SAA0B;QAAvH,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAH5I,cAAS,GAAS,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACpD,WAAM,GAAS,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9C,YAAO,GAAS,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,0BAAO,GAAP;QACC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IACA,6BAAU,GAAV,UAAW,MAAM;QACf,+CAAI,CAAC,MAAM,CAAC,CAAC;QACb,+CAAI,CAAC,MAAM,CAAC,CAAC;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAChC,OAAO,EAAE,oBAAoB;YAC7B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,SAAS;SACnB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEH,eAAC;AAAD,CAAC;AAxBY,QAAQ;IALpB,wEAAS,EAAE;IACX,gEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;aAM0I;AAmB3I;SAxBY,QAAQ,e;;;;;;;;;;;;;;;;;;;ACRoB;AACO;AACd;AAUlC,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAR1B,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uDAAQ;SACT;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;SACnC;KACF,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;ACZ3B;;AAEA;;AAEA,2CAA2C,IAAI;;AAE/C;AACA;AACA,4BAA4B,UAAU;AACtC;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA","file":"42.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, ViewController, ToastController } from 'ionic-angular';\r\nimport * as copy from 'copy-to-clipboard';\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-info',\r\n  templateUrl: 'info.html',\r\n})\r\nexport class InfoPage {\r\nrfi : any;\r\nisBrowser : any = localStorage.getItem('isBrowser');\r\nAPIURL : any = localStorage.getItem('APIURL');\r\nbaseUrl : any = localStorage.getItem('baseUrl');\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public toastCtrl: ToastController) {\r\n  \tthis.rfi = navParams.get('info');\r\n  }\r\n\r\n  dismiss(){\r\n\t  this.viewCtrl.dismiss();\r\n\t}\r\n  copyAnswer(answer){\r\n    copy(answer);\r\n    copy(answer);\r\n    let toast = this.toastCtrl.create({\r\n      message: 'Copy to clipboard.',\r\n      duration: 3000,\r\n      position: 'top',\r\n      cssClass: 'success'\r\n     });\r\n     toast.present();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info/info.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { InfoPage } from './info';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InfoPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(InfoPage),\r\n  ],\r\n})\r\nexport class InfoPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info/info.module.ts","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? 'âŒ˜' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/copy-to-clipboard/index.js\n// module id = 976\n// module chunks = 32 39 42","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/toggle-selection/index.js\n// module id = 977\n// module chunks = 32 39 42"],"sourceRoot":""}